//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Inputs/GameInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputs"",
    ""maps"": [
        {
            ""name"": ""InGame"",
            ""id"": ""f0c05de2-d882-46b5-8afe-84470555d0cc"",
            ""actions"": [
                {
                    ""name"": ""SideMove"",
                    ""type"": ""Value"",
                    ""id"": ""1b473728-b0cc-427d-880d-9d9c9f550e2b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchLight"",
                    ""type"": ""Button"",
                    ""id"": ""388856cd-b177-4520-b87e-62a89f177389"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TemporaryLight"",
                    ""type"": ""Button"",
                    ""id"": ""69b6f0f3-b326-403a-b9a7-4a3a8c4f3d6f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""b374e8f1-d271-46a3-a1da-93bbcff779e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""00907e4e-cb02-436a-9630-90a8a38423c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectObject"",
                    ""type"": ""Value"",
                    ""id"": ""75023385-a5b0-448e-a778-ba83240fc1c9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""a9b89509-2723-41dc-9242-f3d74adcc104"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1960a2d1-e573-41be-a171-b33e8610ef4e"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""SideMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""85b8bfe4-66ea-4a9b-9c5d-7ed6dc95e4db"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""SideMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""87e8b733-6ffe-43d0-8e41-d973100eb017"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f5afed17-fa26-4315-8018-c8fda0e0e6ac"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6aba0ee8-9fde-4b3d-b682-c3c9bd76c277"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f39b8241-e41f-4b79-b0e1-8cd338745e11"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchLight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee3cecfc-50e3-448f-832d-ff5ce0339a2c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchLight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e3af8ec-e1f2-4b9e-bfc2-b774c6d7ae64"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TemporaryLight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""709b1f82-be4b-477b-996e-ccae89e7fe87"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TemporaryLight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06ad678c-47bf-4a47-b78e-a8173cb9fd78"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8e8fdf6-1b63-4577-b7ca-c2a5f8f584aa"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc3e78fe-09fd-4229-b8bc-081e3556aa7d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d50e75d-e8de-47ab-bf0c-23596e92b216"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""KeyBoard"",
                    ""id"": ""e9647f7f-734f-4c08-92db-a76438bec85d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectObject"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""6764279a-9ad5-4fc5-a3a8-0036fb8e7f2a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f0e8900e-608c-47e9-bf80-46d2e4b25e0e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""5c1407d1-e27e-45c5-87b5-1027b35c9cad"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectObject"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1d8e7810-84c4-4ac5-9c84-f073dc799aa8"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ee9d0ac5-b1d7-43c7-8991-4526fee3679f"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InGame
        m_InGame = asset.FindActionMap("InGame", throwIfNotFound: true);
        m_InGame_SideMove = m_InGame.FindAction("SideMove", throwIfNotFound: true);
        m_InGame_SwitchLight = m_InGame.FindAction("SwitchLight", throwIfNotFound: true);
        m_InGame_TemporaryLight = m_InGame.FindAction("TemporaryLight", throwIfNotFound: true);
        m_InGame_StopPlayer = m_InGame.FindAction("StopPlayer", throwIfNotFound: true);
        m_InGame_PauseGame = m_InGame.FindAction("PauseGame", throwIfNotFound: true);
        m_InGame_SelectObject = m_InGame.FindAction("SelectObject", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InGame
    private readonly InputActionMap m_InGame;
    private List<IInGameActions> m_InGameActionsCallbackInterfaces = new List<IInGameActions>();
    private readonly InputAction m_InGame_SideMove;
    private readonly InputAction m_InGame_SwitchLight;
    private readonly InputAction m_InGame_TemporaryLight;
    private readonly InputAction m_InGame_StopPlayer;
    private readonly InputAction m_InGame_PauseGame;
    private readonly InputAction m_InGame_SelectObject;
    public struct InGameActions
    {
        private @GameInputs m_Wrapper;
        public InGameActions(@GameInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @SideMove => m_Wrapper.m_InGame_SideMove;
        public InputAction @SwitchLight => m_Wrapper.m_InGame_SwitchLight;
        public InputAction @TemporaryLight => m_Wrapper.m_InGame_TemporaryLight;
        public InputAction @StopPlayer => m_Wrapper.m_InGame_StopPlayer;
        public InputAction @PauseGame => m_Wrapper.m_InGame_PauseGame;
        public InputAction @SelectObject => m_Wrapper.m_InGame_SelectObject;
        public InputActionMap Get() { return m_Wrapper.m_InGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
        public void AddCallbacks(IInGameActions instance)
        {
            if (instance == null || m_Wrapper.m_InGameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InGameActionsCallbackInterfaces.Add(instance);
            @SideMove.started += instance.OnSideMove;
            @SideMove.performed += instance.OnSideMove;
            @SideMove.canceled += instance.OnSideMove;
            @SwitchLight.started += instance.OnSwitchLight;
            @SwitchLight.performed += instance.OnSwitchLight;
            @SwitchLight.canceled += instance.OnSwitchLight;
            @TemporaryLight.started += instance.OnTemporaryLight;
            @TemporaryLight.performed += instance.OnTemporaryLight;
            @TemporaryLight.canceled += instance.OnTemporaryLight;
            @StopPlayer.started += instance.OnStopPlayer;
            @StopPlayer.performed += instance.OnStopPlayer;
            @StopPlayer.canceled += instance.OnStopPlayer;
            @PauseGame.started += instance.OnPauseGame;
            @PauseGame.performed += instance.OnPauseGame;
            @PauseGame.canceled += instance.OnPauseGame;
            @SelectObject.started += instance.OnSelectObject;
            @SelectObject.performed += instance.OnSelectObject;
            @SelectObject.canceled += instance.OnSelectObject;
        }

        private void UnregisterCallbacks(IInGameActions instance)
        {
            @SideMove.started -= instance.OnSideMove;
            @SideMove.performed -= instance.OnSideMove;
            @SideMove.canceled -= instance.OnSideMove;
            @SwitchLight.started -= instance.OnSwitchLight;
            @SwitchLight.performed -= instance.OnSwitchLight;
            @SwitchLight.canceled -= instance.OnSwitchLight;
            @TemporaryLight.started -= instance.OnTemporaryLight;
            @TemporaryLight.performed -= instance.OnTemporaryLight;
            @TemporaryLight.canceled -= instance.OnTemporaryLight;
            @StopPlayer.started -= instance.OnStopPlayer;
            @StopPlayer.performed -= instance.OnStopPlayer;
            @StopPlayer.canceled -= instance.OnStopPlayer;
            @PauseGame.started -= instance.OnPauseGame;
            @PauseGame.performed -= instance.OnPauseGame;
            @PauseGame.canceled -= instance.OnPauseGame;
            @SelectObject.started -= instance.OnSelectObject;
            @SelectObject.performed -= instance.OnSelectObject;
            @SelectObject.canceled -= instance.OnSelectObject;
        }

        public void RemoveCallbacks(IInGameActions instance)
        {
            if (m_Wrapper.m_InGameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInGameActions instance)
        {
            foreach (var item in m_Wrapper.m_InGameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InGameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InGameActions @InGame => new InGameActions(this);
    public interface IInGameActions
    {
        void OnSideMove(InputAction.CallbackContext context);
        void OnSwitchLight(InputAction.CallbackContext context);
        void OnTemporaryLight(InputAction.CallbackContext context);
        void OnStopPlayer(InputAction.CallbackContext context);
        void OnPauseGame(InputAction.CallbackContext context);
        void OnSelectObject(InputAction.CallbackContext context);
    }
}
